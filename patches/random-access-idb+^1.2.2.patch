# generated by patch-package 6.4.10
#
# command:
#   npx patch-package random-access-idb
#
# declared package:
#   random-access-idb: ^1.2.2
#
diff --git a/node_modules/random-access-idb/index.js b/node_modules/random-access-idb/index.js
index 53e1aed..af9b5e9 100644
--- a/node_modules/random-access-idb/index.js
+++ b/node_modules/random-access-idb/index.js
@@ -3,8 +3,17 @@ var inherits = require('inherits')
 var nextTick = require('next-tick')
 var once = require('once')
 var blocks = require('./lib/blocks.js')
-var bufferFrom = require('buffer-from')
-var bufferAlloc = require('buffer-alloc')
+// var bufferFrom = require('buffer-from')
+// var bufferAlloc = require('buffer-alloc')
+const b4a = require('b4a')
+
+function bufferFrom(input, encoding) {
+  return b4a.from(input, encoding)
+}
+
+function bufferAlloc(n){
+  return b4a.alloc(n)
+}
 
 var DELIM = '\0'
 var win = typeof window !== 'undefined' ? window
@@ -119,7 +128,8 @@ Store.prototype._write = function (req) {
         block = bufferFrom(req.data.slice(j, j+len))
       } else {
         block = buffers[i]
-        req.data.copy(block, o.start, j, j+len)
+        // req.data.copy(block, o.start, j, j+len)
+        b4a.copy(req.data, block, o.start, j, j+len)
       }
       store.put(block,self.name + DELIM + o.block)
       j += len
@@ -173,6 +183,13 @@ Store.prototype._stat = function (req) {
   })
 }
 
+Store.prototype._del = function (req) {
+  var self = this
+  nextTick(function () {
+    req.callback(null, { size: self.length })
+  })
+}
+
 function backify (r, cb) {
   r.addEventListener('success', function (ev) { cb(null, ev) })
   r.addEventListener('error', cb)
